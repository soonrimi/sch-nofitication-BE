name: Production Deploy

on:
  push:
    branches: [deploy]
  workflow_dispatch: # 수동 실행 가능

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: "23"
          distribution: "temurin"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Build Docker image
        run: |
          docker buildx create --use
          docker buildx build --platform linux/arm64 -t sch-notification-be:latest . --load
          docker save sch-notification-be:latest > sch-notification-be.tar

      - name: Copy files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }} # 비밀번호 대신 SSH 키 사용 권장
          source: "sch-notification-be.tar,docker-compose.yml"
          target: "/home/${{ secrets.SERVER_USER }}/sch-notification/"

      - name: Create .env file on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/${{ secrets.SERVER_USER }}/sch-notification
            cat > .env << EOF
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            EOF
            chmod 600 .env

      - name: Deploy on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/${{ secrets.SERVER_USER }}/sch-notification

            # Docker 이미지 로드
            docker load < sch-notification-be.tar

            # 기존 컨테이너 중지 및 제거 (Graceful shutdown)
            docker compose down --timeout 30 || true

            # 새 컨테이너 시작
            docker compose up -d

            # 헬스체크 대기
            echo "Waiting for application to start..."
            for i in {1..30}; do
              if curl -f http://localhost:7100/actuator/health 2>/dev/null; then
                echo "Application is healthy!"
                break
              fi
              sleep 10
            done

            # 사용하지 않는 이미지 정리
            docker image prune -f

            # 상태 확인
            docker compose ps
            docker compose logs --tail=50

      - name: Notify deployment status
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: "Deployment ${{ job.status }}: sch-notification-BE"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
